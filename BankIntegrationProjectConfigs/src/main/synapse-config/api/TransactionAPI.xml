<?xml version="1.0" encoding="UTF-8"?>
<api context="/transactions" name="TransactionAPI" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" uri-template="/withdrawal">
        <inSequence>
            <!-- Save account number -->
            <property expression="json-eval($.Number)" name="uri.var.account_number" scope="default" type="STRING"/>
            <!-- Save CID -->
            <property expression="json-eval($.CID)" name="cid" scope="default" type="STRING"/>
            <!-- Save name -->
            <property expression="json-eval($.Name)" name="name" scope="default" type="STRING"/>
            <!-- Save amount -->
            <property expression="json-eval($.Amount)" name="amount" scope="default" type="STRING"/>
            <!-- Get account balance -->
            <call>
                <endpoint>
                    <http method="get" uri-template="http://localhost:9094/internal/balance/{uri.var.account_number}">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <!-- Save account balance -->
            <property expression="json-eval($.Balance)" name="account_balance" scope="default" type="STRING"/>
            <property name="minimum_balance" scope="default" type="STRING" value="500"/>
            <!-- Check if the balance is not less or equal to 500 -->
            <filter regex="true" source="get-property('account_balance') - get-property('amount') >= get-property('minimum_balance')">
                <then>
                    <payloadFactory media-type="json">
                        <format>{"Name":"$1", "CID":"$2", "Number":"$3", "Amount": "$4"}</format>
                        <args>
                            <arg evaluator="xml" expression="get-property('name')" literal="true"/>
                            <arg evaluator="xml" expression="get-property('cid')" literal="true"/>
                            <arg evaluator="xml" expression="get-property('uri.var.account_number')" literal="true"/>
                            <arg evaluator="xml" expression="get-property('amount')" literal="true"/>
                        </args>
                    </payloadFactory>
                    <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                    <call>
                        <endpoint>
                            <http method="post" uri-template="http://localhost:9092/transactions/withdrawal">
                                <suspendOnFailure>
                                    <initialDuration>-1</initialDuration>
                                    <progressionFactor>-1</progressionFactor>
                                    <maximumDuration>0</maximumDuration>
                                </suspendOnFailure>
                                <markForSuspension>
                                    <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                </markForSuspension>
                            </http>
                        </endpoint>
                    </call>
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>{"Status": "Message": "Account balance is insufficient to complete the withdrawal"}</format>
                        <args/>
                    </payloadFactory>
                    <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                </else>
            </filter>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/deposit">
        <inSequence>
            <!-- Save account number -->
            <property expression="json-eval($.Number)" name="uri.var.account_number" scope="default" type="STRING"/>
            <!-- Save CID -->
            <property expression="json-eval($.CID)" name="cid" scope="default" type="STRING"/>
            <!-- Save name -->
            <property expression="json-eval($.Name)" name="name" scope="default" type="STRING"/>
            <!-- Save deposit amount -->
            <property expression="json-eval($.Amount)" name="amount" scope="default" type="STRING"/>
            <!-- Validate sender's account -->
            <call>
                <endpoint>
                    <http method="get" uri-template="http://localhost:9094/internal/verify/{uri.var.account_number}">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <!-- Save account verification -->
            <property expression="json-eval($.Status)" name="account_status" scope="default" type="STRING"/>
            <!-- Check if the account is valid or not -->
            <filter regex="Valid account" source="get-property('account_status')">
                <then>
                    <payloadFactory media-type="json">
                        <format>{"Name":"$1", "CID":"$2", "Number":"$3", "Amount": "$4"}</format>
                        <args>
                            <arg evaluator="xml" expression="get-property('name')" literal="true"/>
                            <arg evaluator="xml" expression="get-property('cid')" literal="true"/>
                            <arg evaluator="xml" expression="get-property('uri.var.account_number')" literal="true"/>
                            <arg evaluator="xml" expression="get-property('amount')" literal="true"/>
                        </args>
                    </payloadFactory>
                    <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                    <call>
                        <endpoint>
                            <http method="post" uri-template="http://localhost:9092/transactions/deposit">
                                <suspendOnFailure>
                                    <initialDuration>-1</initialDuration>
                                    <progressionFactor>-1</progressionFactor>
                                    <maximumDuration>0</maximumDuration>
                                </suspendOnFailure>
                                <markForSuspension>
                                    <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                </markForSuspension>
                            </http>
                        </endpoint>
                    </call>
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>{"Status": "Message": "Account is not verified"}</format>
                        <args/>
                    </payloadFactory>
                    <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                </else>
            </filter>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
    <resource methods="POST" uri-template="/fundtransfer">
        <inSequence>
            <!-- ** Save Sender Info ** -->
            <!-- Save account number -->
            <!-- Validate recipient's account -->
            <property expression="json-eval($.SenderInfo.Number)" name="uri.var.sender_account_number" scope="default" type="STRING"/>
            <!-- Save CID -->
            <property expression="json-eval($.SenderInfo.CID)" name="sender_cid" scope="default" type="STRING"/>
            <!-- Save name -->
            <property expression="json-eval($.SenderInfo.Name)" name="sender_name" scope="default" type="STRING"/>
            <!-- Save deposit amount -->
            <property expression="json-eval($.SenderInfo.Amount)" name="amount" scope="default" type="STRING"/>
            <!-- ** Save Recipient Info ** -->
            <!-- Save account number -->
            <property expression="json-eval($.RecipientInfo.Number)" name="uri.var.recipient_account_number" scope="default" type="STRING"/>
            <!-- Save CID -->
            <property expression="json-eval($.RecipientInfo.CID)" name="recipient_cid" scope="default" type="STRING"/>
            <!-- Save name -->
            <property expression="json-eval($.RecipientInfo.Name)" name="recipient_name" scope="default" type="STRING"/>
            <!-- Validate sender's account balance -->
            <call>
                <endpoint>
                    <http method="get" uri-template="http://localhost:9094/internal/balance/{uri.var.sender_account_number}">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <!-- Save sender's account balance -->
            <property expression="json-eval($.Balance)" name="account_balance" scope="default" type="STRING"/>
            <property name="minimum_balance" scope="default" type="STRING" value="500"/>
            <!-- Check if the sender's balance is not less or equal to 500 -->
            <filter regex="true" source="get-property('account_balance') - get-property('amount') >= get-property('minimum_balance')">
                <then>
                    <call>
                        <endpoint>
                            <http method="get" uri-template="http://localhost:9094/internal/verify/{uri.var.recipient_account_number}">
                                <suspendOnFailure>
                                    <initialDuration>-1</initialDuration>
                                    <progressionFactor>-1</progressionFactor>
                                    <maximumDuration>0</maximumDuration>
                                </suspendOnFailure>
                                <markForSuspension>
                                    <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                </markForSuspension>
                            </http>
                        </endpoint>
                    </call>
                    <!-- Save account verification -->
                    <property expression="json-eval($.Status)" name="account_status" scope="default" type="STRING"/>
                    <!-- Check if the account is valid or not -->
                    <filter regex="Valid account" source="get-property('account_status')">
                        <then>
                            <payloadFactory media-type="json">
                                <format>{"SenderName":"$1","SenderCID":"$2","SenderNumber":"$3", "TransferAmount":"$4","RecipientName":"$5","RecipientCID":"$6","RecipientNumber":"$7"}</format>
                                <args>
                                    <arg evaluator="xml" expression="get-property('sender_name')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('sender_cid')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('uri.var.sender_account_number')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('amount')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('recipient_name')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('recipient_cid')" literal="true"/>
                                    <arg evaluator="xml" expression="get-property('uri.var.recipient_account_number')" literal="true"/>
                                </args>
                            </payloadFactory>
                            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                            <call>
                                <endpoint>
                                    <http method="post" uri-template="http://localhost:9092/transactions/fundtransfer">
                                        <suspendOnFailure>
                                            <initialDuration>-1</initialDuration>
                                            <progressionFactor>-1</progressionFactor>
                                            <maximumDuration>0</maximumDuration>
                                        </suspendOnFailure>
                                        <markForSuspension>
                                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                        </markForSuspension>
                                    </http>
                                </endpoint>
                            </call>
                        </then>
                        <else>
                            <payloadFactory media-type="json">
                                <format>{"Status": "Message": "Recipient's account is not verified"}</format>
                                <args/>
                            </payloadFactory>
                            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                        </else>
                    </filter>
                </then>
                <else>
                    <payloadFactory media-type="json">
                        <format>{"Status": "Message": "Sender's account balance is insufficient to complete the fund transfer"}</format>
                        <args/>
                    </payloadFactory>
                    <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                </else>
            </filter>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
